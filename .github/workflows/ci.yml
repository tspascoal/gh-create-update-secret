name: CI

on:
  push: 
    branches: 
      - master
  pull_request:
    branches: 
      - master

jobs:

  build:
    name: build & analize

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting of sonarcloud
        fetch-depth: 0

    - run: npm ci

    - run: npm run build

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUDTOKEN }}
      with:
        projectBaseDir: ${{ github.workspace }}

    - name: run eslint
      run: npx eslint src --ext .ts -f @microsoft/eslint-formatter-sarif -o results.sarif

    - name: Upload lint results (SARIF)
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif
      if: always()

    - name: npm pack
      run: npm pack

    - name: upload npm package
      uses: actions/upload-artifact@v2
      with:
        name: package
        path: gh-create-update-secret-*.tgz
        
  code_scanning:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: javascript
        config-file: ./.github/codeql/codeql-config.yml

    - run: npm ci
    - run: npm run build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
      
  semgrep:
    name: Semgrep scan
    runs-on: ubuntu-latest
    if: (github.actor != 'dependabot[bot]')
    container:
      image: returntocorp/semgrep    
    steps:
      - uses: actions/checkout@v2

      - name: scan
        run: semgrep scan --sarif --output=semgrep.sarif --config=policy
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      - name: semgrep ci
        run: semgrep ci

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif
        if: always()


  # Installs globally the package (tgz) that was uploaded as an artifact and runs it
  integrationtest:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download npm package
        uses: actions/download-artifact@v2
        with:
          name: package
      - name: install npm package
        run: |
          packageName=`ls gh-create-update-secret-*.tgz`
          sudo npm install -g "$packageName"

      - name: simulate secret creation
        run: |
          gh-create-update-secret --secret dummy_doesnot_exist --value "dummy" --repo "${{ github.repository  }}" --update-only
        env:
          GH_PAT: ${{ secrets.GITHUB_TOKEN }}



